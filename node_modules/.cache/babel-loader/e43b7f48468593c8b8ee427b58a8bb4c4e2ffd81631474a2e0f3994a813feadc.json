{"ast":null,"code":"var _jsxFileName = \"C:\\\\GithubProjekti\\\\MatchCarousel\\\\src\\\\components\\\\MatchCarousel.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport \"./MatchCarousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MatchCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matches: [],\n      currentIndex: 0,\n      matchArraysWithData: [],\n      maxCards: props.max || 10,\n      sportsId: props.sportId || 0\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n    this.interval = setInterval(() => {\n      const {\n        currentIndex,\n        maxCards\n      } = this.state;\n      if (currentIndex === maxCards - 1) {\n        this.setState({\n          currentIndex: 0\n        });\n      } else {\n        this.setState(prevState => ({\n          currentIndex: prevState.currentIndex + 1\n        }));\n      }\n    }, 3000);\n  }\n  resetAutoPlayTimer() {\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      const {\n        currentIndex,\n        maxCards\n      } = this.state;\n      if (currentIndex === maxCards - 1) {\n        this.setState({\n          currentIndex: 0\n        });\n      } else {\n        this.setState(prevState => ({\n          currentIndex: prevState.currentIndex + 1\n        }));\n      }\n    }, 3000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async fetchData() {\n    try {\n      const response = await fetch(\"https://lmt.fn.sportradar.com/demolmt/en/Etc:UTC/gismo/event_fullfeed/0/1/12074\");\n      const data = await response.json();\n      this.setState({\n        matches: data\n      });\n      const matchesArray = Object.values(data);\n      matchesArray.forEach(match => {\n        var _match$, _match$$data, _match$$data$this$sta;\n        const rc = match === null || match === void 0 ? void 0 : (_match$ = match[0]) === null || _match$ === void 0 ? void 0 : (_match$$data = _match$.data) === null || _match$$data === void 0 ? void 0 : (_match$$data$this$sta = _match$$data[this.state.sportsId]) === null || _match$$data$this$sta === void 0 ? void 0 : _match$$data$this$sta.realcategories;\n        if (rc) {\n          rc.forEach(category => {\n            const tournaments = category === null || category === void 0 ? void 0 : category.tournaments;\n            const categoryName = category === null || category === void 0 ? void 0 : category.name;\n            if (tournaments) {\n              tournaments.forEach(tournament => {\n                const tournamentName = tournament === null || tournament === void 0 ? void 0 : tournament.name;\n                const tournamentSeasonTypeName = tournament === null || tournament === void 0 ? void 0 : tournament.seasontypename;\n                const matches = tournament === null || tournament === void 0 ? void 0 : tournament.matches;\n                if (matches) {\n                  matches.forEach(match => {\n                    var _match$teams, _match$teams$away, _match$teams2, _match$teams2$home, _match$teams3, _match$teams3$away, _match$teams4, _match$teams4$home;\n                    const awayTeamName = match === null || match === void 0 ? void 0 : (_match$teams = match.teams) === null || _match$teams === void 0 ? void 0 : (_match$teams$away = _match$teams.away) === null || _match$teams$away === void 0 ? void 0 : _match$teams$away.name;\n                    const homeTeamName = match === null || match === void 0 ? void 0 : (_match$teams2 = match.teams) === null || _match$teams2 === void 0 ? void 0 : (_match$teams2$home = _match$teams2.home) === null || _match$teams2$home === void 0 ? void 0 : _match$teams2$home.name;\n                    const matchStatusId = match === null || match === void 0 ? void 0 : match.status._id;\n                    const matchStatusName = match === null || match === void 0 ? void 0 : match.status.name;\n                    const matchDate = match === null || match === void 0 ? void 0 : match._dt.date;\n                    const matchTime = match === null || match === void 0 ? void 0 : match._dt.time;\n                    const resultAway = match === null || match === void 0 ? void 0 : match.result.away;\n                    const resultHome = match === null || match === void 0 ? void 0 : match.result.home;\n                    const awayTeamFlagID = match === null || match === void 0 ? void 0 : (_match$teams3 = match.teams) === null || _match$teams3 === void 0 ? void 0 : (_match$teams3$away = _match$teams3.away) === null || _match$teams3$away === void 0 ? void 0 : _match$teams3$away.uid;\n                    const homeTeamFlagID = match === null || match === void 0 ? void 0 : (_match$teams4 = match.teams) === null || _match$teams4 === void 0 ? void 0 : (_match$teams4$home = _match$teams4.home) === null || _match$teams4$home === void 0 ? void 0 : _match$teams4$home.uid;\n                    const matchArray = [homeTeamName, awayTeamName, matchStatusId, matchStatusName, matchDate, matchTime, resultAway, resultHome, tournamentName, tournamentSeasonTypeName, categoryName, homeTeamFlagID, awayTeamFlagID];\n                    this.state.matchArraysWithData.push(matchArray);\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n      this.setState({\n        maxCards: Math.min(this.state.maxCards, this.state.matchArraysWithData.length)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.max !== prevProps.max) {\n      this.setState({\n        maxCards: this.props.max\n      });\n      this.setState({\n        currentIndex: 0\n      });\n    }\n    if (this.props.sportId !== prevProps.sportId) {\n      this.setState({\n        sportsId: this.props.sportId\n      });\n      this.setState({\n        currentIndex: 0\n      });\n    }\n  }\n  render() {\n    const {\n      currentIndex\n    } = this.state;\n    const selectedMatches = this.state.matchArraysWithData.slice(0, this.state.maxCards);\n\n    // v primeru ce je razpoložljivih manj kot 10 tekm določenega sporta\n    if (selectedMatches.length > this.state.maxCards) {\n      this.setState({\n        maxCards: selectedMatches.length\n      });\n    }\n    const handleClick = componentNumber => {\n      this.setState({\n        currentIndex: componentNumber\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: selectedMatches.map((match, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            match: match,\n            index: index,\n            homeTeamName: match[0],\n            awayTeamName: match[1],\n            matchStatusId: match[2],\n            matchStatusName: match[3],\n            matchDate: match[4],\n            matchTime: match[5],\n            resultAway: match[6],\n            resultHome: match[7],\n            tournamentName: match[8],\n            tournamentSeasonTypeName: match[9],\n            categorieName: match[10],\n            homeTeamFlagID: match[11],\n            awayTeamFlagID: match[12],\n            show: index === currentIndex\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot-container\",\n        children: selectedMatches.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleClick(index);\n              this.resetAutoPlayTimer();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `dot ${index === currentIndex ? \"active\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MatchCarousel;","map":{"version":3,"names":["React","Component","Card","jsxDEV","_jsxDEV","MatchCarousel","constructor","props","state","matches","currentIndex","matchArraysWithData","maxCards","max","sportsId","sportId","componentDidMount","fetchData","interval","setInterval","setState","prevState","resetAutoPlayTimer","clearInterval","componentWillUnmount","response","fetch","data","json","matchesArray","Object","values","forEach","match","_match$","_match$$data","_match$$data$this$sta","rc","realcategories","category","tournaments","categoryName","name","tournament","tournamentName","tournamentSeasonTypeName","seasontypename","_match$teams","_match$teams$away","_match$teams2","_match$teams2$home","_match$teams3","_match$teams3$away","_match$teams4","_match$teams4$home","awayTeamName","teams","away","homeTeamName","home","matchStatusId","status","_id","matchStatusName","matchDate","_dt","date","matchTime","time","resultAway","result","resultHome","awayTeamFlagID","uid","homeTeamFlagID","matchArray","push","Math","min","length","error","console","log","componentDidUpdate","prevProps","render","selectedMatches","slice","handleClick","componentNumber","children","className","map","index","categorieName","show","fileName","_jsxFileName","lineNumber","columnNumber","item","onClick"],"sources":["C:/GithubProjekti/MatchCarousel/src/components/MatchCarousel.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./MatchCarousel.css\";\r\n\r\nclass MatchCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      matches: [],\r\n      currentIndex: 0,\r\n      matchArraysWithData:[],\r\n      maxCards: props.max || 10,\r\n      sportsId: props.sportId || 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n\r\n    this.interval = setInterval(() => {\r\n      const { currentIndex, maxCards } = this.state;\r\n      if (currentIndex === maxCards - 1) {\r\n        this.setState({ currentIndex: 0 });\r\n      } else {\r\n        this.setState((prevState) => ({\r\n          currentIndex: prevState.currentIndex + 1,\r\n        }));\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  resetAutoPlayTimer() {\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(() => {\r\n      const { currentIndex, maxCards } = this.state;\r\n      if (currentIndex === maxCards - 1) {\r\n        this.setState({ currentIndex: 0 });\r\n      } else {\r\n        this.setState((prevState) => ({\r\n          currentIndex: prevState.currentIndex + 1,\r\n        }));\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://lmt.fn.sportradar.com/demolmt/en/Etc:UTC/gismo/event_fullfeed/0/1/12074\"\r\n      );\r\n      const data = await response.json();\r\n      this.setState({ matches: data });\r\n\r\n      const matchesArray = Object.values(data);\r\n      matchesArray.forEach((match) => {\r\n        const rc = match?.[0]?.data?.[this.state.sportsId]?.realcategories;\r\n  \r\n        if (rc) {\r\n          rc.forEach((category) => {\r\n            const tournaments = category?.tournaments;\r\n            const categoryName = category?.name;\r\n  \r\n            if (tournaments) {\r\n              tournaments.forEach((tournament) => {\r\n                const tournamentName = tournament?.name;\r\n                const tournamentSeasonTypeName = tournament?.seasontypename;\r\n                const matches = tournament?.matches;\r\n  \r\n                if (matches) {\r\n                  matches.forEach((match) => {\r\n                    const awayTeamName = match?.teams?.away?.name;\r\n                    const homeTeamName = match?.teams?.home?.name;\r\n                    const matchStatusId = match?.status._id;\r\n                    const matchStatusName = match?.status.name;\r\n                    const matchDate = match?._dt.date;\r\n                    const matchTime = match?._dt.time;\r\n                    const resultAway = match?.result.away;\r\n                    const resultHome = match?.result.home;\r\n                    const awayTeamFlagID = match?.teams?.away?.uid;\r\n                    const homeTeamFlagID = match?.teams?.home?.uid;\r\n  \r\n                    const matchArray = [\r\n                      homeTeamName,\r\n                      awayTeamName,\r\n                      matchStatusId,\r\n                      matchStatusName,\r\n                      matchDate,\r\n                      matchTime,\r\n                      resultAway,\r\n                      resultHome,\r\n                      tournamentName,\r\n                      tournamentSeasonTypeName,\r\n                      categoryName,\r\n                      homeTeamFlagID,\r\n                      awayTeamFlagID,\r\n                    ];\r\n  \r\n                    this.state.matchArraysWithData.push(matchArray);\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      this.setState({ maxCards: Math.min(this.state.maxCards, this.state.matchArraysWithData.length) });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.max !== prevProps.max) {\r\n      this.setState({ maxCards: this.props.max });\r\n      this.setState({ currentIndex: 0 });\r\n    }\r\n    if (this.props.sportId !== prevProps.sportId) {\r\n      this.setState({ sportsId: this.props.sportId });\r\n      this.setState({ currentIndex: 0 });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { currentIndex } = this.state;\r\n\r\n    const selectedMatches = this.state.matchArraysWithData.slice(0, this.state.maxCards);\r\n\r\n    // v primeru ce je razpoložljivih manj kot 10 tekm določenega sporta\r\n    if(selectedMatches.length > this.state.maxCards){\r\n      this.setState({ maxCards: selectedMatches.length });\r\n    }\r\n\r\n    const handleClick = (componentNumber) => {\r\n      this.setState({ currentIndex: componentNumber });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          {selectedMatches.map((match, index) => {\r\n            return (\r\n              <Card\r\n                match={match}\r\n                key={index}\r\n                index={index}\r\n                homeTeamName={match[0]}\r\n                awayTeamName={match[1]}\r\n                matchStatusId={match[2]}\r\n                matchStatusName={match[3]}\r\n                matchDate={match[4]}\r\n                matchTime={match[5]}\r\n                resultAway={match[6]}\r\n                resultHome={match[7]}\r\n                tournamentName={match[8]}\r\n                tournamentSeasonTypeName={match[9]}\r\n                categorieName={match[10]}\r\n                homeTeamFlagID={match[11]}\r\n                awayTeamFlagID={match[12]}\r\n                show={index === currentIndex}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"dot-container\">\r\n          {selectedMatches.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={index}\r\n                onClick={() => {\r\n                  handleClick(index);\r\n                  this.resetAutoPlayTimer();\r\n                }}\r\n              >\r\n                <span\r\n                  className={`dot ${index === currentIndex ? \"active\" : \"\"}`}\r\n                ></span>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MatchCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}